<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="whut.dao.ProAttributeDao">        
<resultMap id="ProductAttributeKeyResultMap" type="whut.pojo.ProductAttributeKey">
    <id column="key_id" jdbcType="INTEGER" property="keyId" />
    <result column="category_id" jdbcType="INTEGER" property="categoryId" />
    <result column="attr_name" jdbcType="VARCHAR" property="attrName" />
    <result column="name_sort" jdbcType="TINYINT" property="nameSort" />
    <result column="status" jdbcType="TINYINT" property="status" />
    
    <collection property="attributeValues" javaType="list" ofType="ProductAttributeValue">
    	<id column="value_id" jdbcType="INTEGER" property="valueId" />
	    <result column="attr_key_id" jdbcType="INTEGER" property="attrKeyId" />
	    <result column="attr_value" jdbcType="VARCHAR" property="attrValue" />
	    <result column="value_sort" jdbcType="TINYINT" property="valueSort" />
	    <result column="value_status" jdbcType="TINYINT" property="status" />
    </collection>
</resultMap>

 <resultMap id="ProductAttributeValueResultMap" type="whut.pojo.ProductAttributeValue">
    <id column="value_id" jdbcType="INTEGER" property="valueId" />
    <result column="attr_key_id" jdbcType="INTEGER" property="attrKeyId" />
    <result column="attr_value" jdbcType="VARCHAR" property="attrValue" />
    <result column="value_sort" jdbcType="TINYINT" property="valueSort" />
    <result column="status" jdbcType="TINYINT" property="status" />
  </resultMap>
  
   <select id="getProductAttributeKeyList"  parameterType="hashmap" resultMap="ProductAttributeKeyResultMap">
        SELECT * FROM product_attribute_key where status = 1
        limit #{pageindex},#{pagesize}
   </select>
   
   <select id="getProductAttributeKeyByIdAndName"  parameterType="hashmap" resultMap="ProductAttributeKeyResultMap">
        SELECT * FROM product_attribute_key where status = 1
        <if test="categoryId != null">
        	and category_id = #{categoryId}
        </if>
        <if test="attrName != null">
        	and attr_name LIKE CONCAT(CONCAT('%',#{attrName}),'%')
        </if>
   </select>
   
    <select id="addProductAttributeKey" parameterType="ProductAttributeKey">
    	INSERT INTO product_attribute_key
    	(category_id,attr_name,name_sort,status)      
        VALUES
    	(#{categoryId},#{attrName},#{nameSort},1)
    </select>
    
    <select id="modifyProductAttributeKey" parameterType="ProductAttributeKey">
    	UPDATE product_attribute_key SET 
    	category_id = #{categoryId},attr_name = #{attrName},name_sort = #{nameSort},status = #{status}
        WHERE key_id = #{keyId}
    </select>
    
    <select id="modifyProductAttributeKeyByStatus" parameterType="hashmap">
    	UPDATE product_attribute_key SET status = #{status}
        WHERE key_id = #{keyId}
    </select>
    
   <select id="getProductAttributeKeyByCategoryID"  parameterType="string" resultMap="ProductAttributeKeyResultMap">
        SELECT pk.key_id,pk.category_id,pk.attr_name,pk.name_sort,pk.status,
		pv.value_id,pv.attr_key_id,pv.attr_value,pv.value_sort,pv.status value_status FROM product_attribute_key pk
		LEFT JOIN product_attribute_value pv on pv.attr_key_id = pk.key_id
		where pk.status = 1 and pv.status = 1
        and category_id = #{id}
   </select>
   
   <select id="getProductAttributeValueByKeyID"  parameterType="string" resultMap="ProductAttributeValueResultMap">
        SELECT * FROM product_attribute_value where status = 1 and attr_key_id = #{id}
   </select>
   
   <select id="getProductAttributeValueByIdAndValue"  parameterType="hashmap" resultMap="ProductAttributeValueResultMap">
        SELECT * FROM product_attribute_value where status = 1
        <if test="attrKeyId != null">
        	and attr_key_id = #{attrKeyId}
        </if>
        <if test="attrValue != null">
        	and attr_value LIKE CONCAT(CONCAT('%',#{attrValue}),'%')
        </if>
   </select>
   
   <select id="addProductAttributeValue" parameterType="ProductAttributeValue">
    	INSERT INTO product_attribute_value
    	(attr_key_id,attr_value,value_sort,cstatus)      
        VALUES
    	(#{attrKeyId},#{attrValue},#{valueSort},1)
    </select>
    
   <select id="modifyProductAttributeValue" parameterType="ProductAttributeValue">
    	UPDATE product_attribute_value SET 
    	attr_key_id = #{attrKeyId},attr_value = #{attrValue},value_sort = #{valueSort},status = #{status}
        WHERE value_id = #{valueId}
    </select>
    
    <select id="modifyProductAttributeValueByStatus"  parameterType="hashmap">
        UPDATE product_attribute_value SET status  = #{status}
        where value_id = #{valueId}
   </select>
   
</mapper>